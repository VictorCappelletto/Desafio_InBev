name: CD - Continuous Deployment

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: '1.7.0'

jobs:
  # ===========================================================================
  # Job 1: Create Release
  # ===========================================================================
  create-release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📝 Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: 📋 Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            cat CHANGELOG.md | head -100 >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
      
      - name: 🚀 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.extract_version.outputs.VERSION }}
          body: |
            ## 🎉 Release ${{ steps.extract_version.outputs.VERSION }}
            
            ### 📋 Changelog
            
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
            
            ### 🚀 Installation
            
            ```bash
            git clone https://github.com/${{ github.repository }}.git
            cd Desafio_InBev
            git checkout ${{ github.ref_name }}
            cp env.template .env
            astro dev start
            ```
          draft: false
          prerelease: false

  # ===========================================================================
  # Job 2: Deploy Documentation
  # ===========================================================================
  deploy-docs:
    name: 📚 Deploy Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: 📦 Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
      
      - name: 📥 Install dependencies
        run: poetry install --no-interaction
      
      - name: ⚙️ Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: 📚 Deploy to GitHub Pages
        run: poetry run mkdocs gh-deploy --force
      
      - name: ✅ Docs deployed
        run: |
          echo "✅ Documentation deployed to GitHub Pages!"
          echo "🔗 https://${{ github.repository_owner }}.github.io/Desafio_InBev/"

  # ===========================================================================
  # Job 3: Build and Push Docker Image (Optional)
  # ===========================================================================
  docker-push:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 🔑 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📝 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
      
      - name: 🔨 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: ✅ Docker image pushed
        run: |
          echo "✅ Docker image pushed to GHCR!"
          echo "🔗 https://github.com/${{ github.repository }}/pkgs/container/desafio_inbev"

  # ===========================================================================
  # Job 4: Deploy to Astronomer (Optional - requires setup)
  # ===========================================================================
  deploy-astronomer:
    name: 🚀 Deploy to Astronomer
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && false # Disabled by default
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🚀 Deploy to Astronomer
        run: |
          echo "⚠️ Astronomer deployment not configured"
          echo "To enable:"
          echo "1. Set ASTRONOMER_KEY_ID in repository secrets"
          echo "2. Set ASTRONOMER_KEY_SECRET in repository secrets"
          echo "3. Change 'if: false' to 'if: true' in workflow"
          echo ""
          echo "Then use:"
          echo "astro deploy --deployment-id=<YOUR_DEPLOYMENT_ID>"
      
      # Uncomment when ready:
      # - name: 🚀 Install Astronomer CLI
      #   run: curl -sSL install.astronomer.io | sudo bash
      #
      # - name: 🔑 Authenticate
      #   env:
      #     ASTRONOMER_KEY_ID: ${{ secrets.ASTRONOMER_KEY_ID }}
      #     ASTRONOMER_KEY_SECRET: ${{ secrets.ASTRONOMER_KEY_SECRET }}
      #   run: |
      #     astro auth login --key-id ${ASTRONOMER_KEY_ID} --key-secret ${ASTRONOMER_KEY_SECRET}
      #
      # - name: 🚀 Deploy
      #   run: astro deploy <YOUR_DEPLOYMENT_ID>

  # ===========================================================================
  # Job 5: Notify Success
  # ===========================================================================
  cd-success:
    name: ✅ CD Success
    runs-on: ubuntu-latest
    needs: [deploy-docs, docker-push]
    if: success()
    
    steps:
      - name: 🎉 CD Pipeline Passed
        run: |
          echo "================================"
          echo "✅ CD PIPELINE PASSED!"
          echo "================================"
          echo "✅ Documentation: Deployed"
          echo "✅ Docker Image: Pushed"
          echo "================================"
          echo "🎉 Deployment complete!"
      
      # Optional: Send notification to Slack/Discord
      # - name: 📢 Send notification
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     text: '🚀 New deployment to production!'
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      #   if: always()

